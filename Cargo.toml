[package]
name = "yew-wasm-pack-template"
version = "0.2.0"
authors = ["Yew Maintainers <maintainers@yew.rs"]
edition = "2018"

[lib]
crate-type = ["cdylib", "rlib"]

[dependencies]
log = "0.4"
strum = "0.17"
strum_macros = "0.17"
serde = "1"
serde_derive = "1"
wasm-bindgen = "0.2.58"
wasm-logger = "0.2"
# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. However, it is slower than the default
# allocator, so it's not enabled by default.
wee_alloc = { version = "0.4.4", optional = true }
yew = "0.17"
# The `web-sys` crate allows you to interact with the various browser APIs,
# like the DOM.
web-sys = { version = "0.3.22", features = ["KeyboardEvent", "console"] }

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so it's only enabled
# in debug mode.
[target."cfg(debug_assertions)".dependencies]
console_error_panic_hook = "0.1.5"

# These crates are used for running unit tests.
[dev-dependencies]
wasm-bindgen-test = "0.3"
futures = "0.1.27"
js-sys = "0.3.22"
wasm-bindgen-futures = "0.3.22"

[features]
# If you uncomment this line, it will enable `wee_alloc`:
#default = ["wee_alloc"]

[profile.release]
# This makes the compiled code faster and smaller, but it makes compiling slower,
# so it's only enabled in release mode.
lto = true
opt-level = "s"


